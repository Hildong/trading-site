{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phili\\\\Programmering\\\\trading-site\\\\frontend\\\\src\\\\Components\\\\EthereumComponent.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Button from '@mui/material/Button';\nimport '../Style/crypto.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EthereumComponent = props => {\n  _s();\n  const [ETC, setETC] = useState();\n  useEffect(() => {\n    const pricesWs = new WebSocket('wss://ws.coincap.io/prices?assets=ethereum');\n    pricesWs.onmessage = msg => {\n      const value = JSON.parse(msg.data);\n      setETC(Object.values(value).toString());\n    };\n    return () => {\n      pricesWs.close();\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crypto-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"crypto-name\",\n      children: \"Ethereum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"crypto-in-USD\",\n        children: ETC\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), props.showSellButton ? /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        backgroundColor: \"red\",\n        color: \"white\",\n        height: \"80%\"\n      },\n      children: \"Sell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 40\n    }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        backgroundColor: \"green\",\n        color: \"white\",\n        height: \"80%\"\n      },\n      children: \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(EthereumComponent, \"ZvhFshE1OrqPuWpgW79+othFinQ=\");\n_c = EthereumComponent;\nvar _c;\n$RefreshReg$(_c, \"EthereumComponent\");","map":{"version":3,"names":["useEffect","useState","Button","jsxDEV","_jsxDEV","EthereumComponent","props","_s","ETC","setETC","pricesWs","WebSocket","onmessage","msg","value","JSON","parse","data","Object","values","toString","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","showSellButton","sx","backgroundColor","color","height","_c","$RefreshReg$"],"sources":["C:/Users/Phili/Programmering/trading-site/frontend/src/Components/EthereumComponent.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport Button from '@mui/material/Button'\r\nimport '../Style/crypto.css'\r\n\r\ntype Props = {\r\n    showSellButton: Boolean\r\n}\r\n\r\nexport const EthereumComponent: React.FC<Props> = (props: Props) => {\r\n\r\n    const [ETC, setETC] = useState<String>()\r\n \r\n    useEffect(() => {\r\n        const pricesWs = new WebSocket('wss://ws.coincap.io/prices?assets=ethereum')\r\n\r\n        pricesWs.onmessage = msg => {\r\n            const value = JSON.parse(msg.data)\r\n            setETC(Object.values(value).toString())\r\n        }\r\n\r\n        return () => {\r\n            pricesWs.close();\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div className=\"crypto-container\">\r\n            <p className=\"crypto-name\">Ethereum</p>\r\n            <section>\r\n                <p className=\"crypto-in-USD\">{ETC}</p>\r\n            </section>\r\n            {\r\n                props.showSellButton ? <Button sx={{ backgroundColor: \"red\", color: \"white\", height: \"80%\"}}>Sell</Button> : null\r\n            }\r\n            <Button sx={{ backgroundColor: \"green\", color: \"white\", height: \"80%\"}}>Buy</Button>\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAM5B,OAAO,MAAMC,iBAAkC,GAAIC,KAAY,IAAK;EAAAC,EAAA;EAEhE,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAS,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMU,QAAQ,GAAG,IAAIC,SAAS,CAAC,4CAA4C,CAAC;IAE5ED,QAAQ,CAACE,SAAS,GAAGC,GAAG,IAAI;MACxB,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAACI,IAAI,CAAC;MAClCR,MAAM,CAACS,MAAM,CAACC,MAAM,CAACL,KAAK,CAAC,CAACM,QAAQ,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,OAAO,MAAM;MACTV,QAAQ,CAACW,KAAK,CAAC,CAAC;IACpB,CAAC;EACL,CAAC,CAAC;EAEF,oBACIjB,OAAA;IAAKkB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BnB,OAAA;MAAGkB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACvCvB,OAAA;MAAAmB,QAAA,eACInB,OAAA;QAAGkB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEf;MAAG;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EAENrB,KAAK,CAACsB,cAAc,gBAAGxB,OAAA,CAACF,MAAM;MAAC2B,EAAE,EAAE;QAAEC,eAAe,EAAE,KAAK;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAK,CAAE;MAAAT,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,GAAG,IAAI,eAErHvB,OAAA,CAACF,MAAM;MAAC2B,EAAE,EAAE;QAAEC,eAAe,EAAE,OAAO;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAK,CAAE;MAAAT,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAEd,CAAC;AAAApB,EAAA,CA7BYF,iBAAkC;AAAA4B,EAAA,GAAlC5B,iBAAkC;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}