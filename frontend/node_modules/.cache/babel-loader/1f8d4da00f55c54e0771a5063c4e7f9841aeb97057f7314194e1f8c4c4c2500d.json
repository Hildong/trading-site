{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phili\\\\Programmering\\\\Trading site\\\\frontend\\\\src\\\\Components\\\\Tables\\\\tradeTables.tsx\",\n  _s = $RefreshSig$();\nimport { useMemo } from \"react\";\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TradeTable = props => {\n  _s();\n  const data = useMemo(() => props.data, []);\n  const columns = useMemo(() => [{\n    Header: \"Action\",\n    accessor: \"action\"\n  }, {\n    Header: \"Price\",\n    accessor: \"price\"\n  }, {\n    Header: \"Base\",\n    accessor: \"base\"\n  }, {\n    Header: \"Volume\",\n    accessor: \"volume\"\n  }, {\n    Header: \"Quote\",\n    accessor: \"quote\"\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(TradeTable, \"2M+cEGJjZRLIqxt38XQe/AMxJJk=\", false, function () {\n  return [useTable];\n});\n_c = TradeTable;\nvar _c;\n$RefreshReg$(_c, \"TradeTable\");","map":{"version":3,"names":["useMemo","useTable","jsxDEV","_jsxDEV","TradeTable","props","_s","data","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["C:/Users/Phili/Programmering/Trading site/frontend/src/Components/Tables/tradeTables.tsx"],"sourcesContent":["import { useMemo } from \"react\";\r\nimport { useTable, Column } from \"react-table\";\r\n\r\ninterface Props {\r\n    data: Array<object>;\r\n}\r\n\r\nexport const TradeTable = (props: Props) => {\r\n    const data = useMemo(() => props.data, [])\r\n    const columns = useMemo(() => [\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"action\"\r\n        },\r\n        {\r\n            Header: \"Price\",\r\n            accessor: \"price\"\r\n        },\r\n        {\r\n            Header: \"Base\",\r\n            accessor: \"base\"\r\n        },\r\n        {\r\n            Header: \"Volume\",\r\n            accessor: \"volume\"\r\n        },\r\n        {\r\n            Header: \"Quote\",\r\n            accessor: \"quote\"\r\n        },\r\n      ],\r\n      []\r\n    );\r\n\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = \r\n    useTable({ columns, data })\r\n  \r\n    return (\r\n        <div className=\"table\">\r\n            <table {...getTableProps}>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>\r\n                                    {column.render(\"Header\")}            \r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => (\r\n                                    <td {...cell.getCellProps()}>\r\n                                        {cell.render(\"Cell\")}\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,QAAQ,QAAgB,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM/C,OAAO,MAAMC,UAAU,GAAIC,KAAY,IAAK;EAAAC,EAAA;EACxC,MAAMC,IAAI,GAAGP,OAAO,CAAC,MAAMK,KAAK,CAACE,IAAI,EAAE,EAAE,CAAC;EAC1C,MAAMC,OAAO,GAAGR,OAAO,CAAC,MAAM,CAC1B;IACIS,MAAM,EAAE,QAAQ;IAChBC,QAAQ,EAAE;EACd,CAAC,EACD;IACID,MAAM,EAAE,OAAO;IACfC,QAAQ,EAAE;EACd,CAAC,EACD;IACID,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE;EACd,CAAC,EACD;IACID,MAAM,EAAE,QAAQ;IAChBC,QAAQ,EAAE;EACd,CAAC,EACD;IACID,MAAM,EAAE,OAAO;IACfC,QAAQ,EAAE;EACd,CAAC,CACF,EACD,EACF,CAAC;EAED,MAAM;IAAEC,aAAa;IAAEC,iBAAiB;IAAEC,YAAY;IAAEC,IAAI;IAAEC;EAAW,CAAC,GAC1Ed,QAAQ,CAAC;IAAEO,OAAO;IAAED;EAAK,CAAC,CAAC;EAE3B,oBACIJ,OAAA;IAAKa,SAAS,EAAC,OAAO;IAAAC,QAAA,eAClBd,OAAA;MAAA,GAAWQ,aAAa;MAAAM,QAAA,gBACpBd,OAAA;QAAAc,QAAA,EACKJ,YAAY,CAACK,GAAG,CAAEC,WAAW,iBAC1BhB,OAAA;UAAA,GAAQgB,WAAW,CAACC,mBAAmB,CAAC,CAAC;UAAAH,QAAA,EACpCE,WAAW,CAACE,OAAO,CAACH,GAAG,CAAEI,MAAM,iBAC5BnB,OAAA;YAAA,GAAQmB,MAAM,CAACC,cAAc,CAAC,CAAC;YAAAN,QAAA,EAC1BK,MAAM,CAACE,MAAM,CAAC,QAAQ;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACRzB,OAAA;QAAA,GAAWS,iBAAiB,CAAC,CAAC;QAAAK,QAAA,EACzBH,IAAI,CAACI,GAAG,CAACW,GAAG,IAAI;UACbd,UAAU,CAACc,GAAG,CAAC;UACf,oBACI1B,OAAA;YAAA,GAAQ0B,GAAG,CAACC,WAAW,CAAC,CAAC;YAAAb,QAAA,EACpBY,GAAG,CAACE,KAAK,CAACb,GAAG,CAACc,IAAI,iBACf7B,OAAA;cAAA,GAAQ6B,IAAI,CAACC,YAAY,CAAC,CAAC;cAAAhB,QAAA,EACtBe,IAAI,CAACR,MAAM,CAAC,MAAM;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpB,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAEb,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAAAtB,EAAA,CA7DYF,UAAU;EAAA,QA4BnBH,QAAQ;AAAA;AAAAiC,EAAA,GA5BC9B,UAAU;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}