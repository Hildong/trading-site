{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phili\\\\Programmering\\\\trading-site\\\\frontend\\\\src\\\\Components\\\\Navbar.tsx\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { Avatar } from '@mui/material';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { resetUser } from '../API/postRequests';\nimport { getUserData } from '../API/getRequests';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport '../Style/navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultUserValues = {\n  portfolio: {\n    fiat: 200000,\n    btc: 0,\n    eth: 0\n  },\n  trades: null\n};\nconst Navbar = () => {\n  _s();\n  const queryClient = useQueryClient();\n  const {\n    isLoading,\n    isError,\n    data\n  } = useQuery({\n    queryKey: [\"fiat\"],\n    queryFn: getUserData\n  });\n  const resetUserData = useMutation({\n    mutationFn: resetUser,\n    onSuccess: data => {\n      queryClient.invalidateQueries([\"fiat\"], {\n        exact: true\n      }, data);\n    }\n  });\n  const handleResetClick = () => {\n    resetUserData.mutate(defaultUserValues);\n  };\n  console.log(process.env.REACT_APP_ENDPOINT);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            onClick: () => window.location.href = \"/\",\n            variant: \"h5\",\n            component: \"div\",\n            sx: {\n              flexGrow: 1,\n              cursor: \"pointer\"\n            },\n            children: \"Good crypto trading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              color: \"black\",\n              backgroundColor: \"white\",\n              marginRight: \"1rem\"\n            },\n            onClick: () => handleResetClick(),\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav-link\",\n            to: \"/\",\n            children: \"Buy&Sell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav-link\",\n            to: \"/portfolio\",\n            children: \"Portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav-link\",\n            to: \"/about\",\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            color: \"inherit\",\n            children: \"PH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this) : data && !isError ? Object.entries(data).map(_ref => {\n            let [key, value] = _ref;\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: value\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 103\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"NaN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 131\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"oqi2+X1n+DgpGUj1mjgP1bFARbM=\", false, function () {\n  return [useQueryClient, useQuery, useMutation];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["Link","Avatar","useMutation","useQuery","useQueryClient","resetUser","getUserData","AppBar","Box","Toolbar","Typography","Button","jsxDEV","_jsxDEV","defaultUserValues","portfolio","fiat","btc","eth","trades","Navbar","_s","queryClient","isLoading","isError","data","queryKey","queryFn","resetUserData","mutationFn","onSuccess","invalidateQueries","exact","handleResetClick","mutate","console","log","process","env","REACT_APP_ENDPOINT","className","children","sx","flexGrow","position","onClick","window","location","href","variant","component","cursor","fileName","_jsxFileName","lineNumber","columnNumber","color","backgroundColor","marginRight","to","Object","entries","map","_ref","key","value","_c","$RefreshReg$"],"sources":["C:/Users/Phili/Programmering/trading-site/frontend/src/Components/Navbar.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport { Avatar } from '@mui/material';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport { resetUser } from '../API/postRequests';\r\nimport { getUserData } from '../API/getRequests';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport '../Style/navbar.css'\r\n\r\nconst defaultUserValues = {\r\n    portfolio: {\r\n        fiat: 200000,\r\n        btc: 0,\r\n        eth: 0\r\n    },\r\n    trades: null\r\n}\r\n\r\nconst Navbar: React.FC = () => {\r\n\r\n\r\n    const queryClient = useQueryClient();\r\n    const {isLoading, isError, data} = useQuery<any>({\r\n        queryKey: [\"fiat\"],\r\n        queryFn: getUserData\r\n    })\r\n    const resetUserData = useMutation({\r\n        mutationFn: resetUser,\r\n        onSuccess: data => {\r\n            queryClient.invalidateQueries([\"fiat\"], {exact: true}, data)\r\n        }\r\n    })\r\n\r\n    const handleResetClick = () => {\r\n        resetUserData.mutate(\r\n            defaultUserValues\r\n        )\r\n    }\r\n\r\n    console.log(process.env.REACT_APP_ENDPOINT)\r\n    console.log(data)\r\n    \r\n    return(\r\n        <div className=\"navbar\">\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                    <Typography onClick={() => window.location.href=\"/\"} variant=\"h5\" component=\"div\" sx={{ flexGrow: 1, cursor: \"pointer\" }}>\r\n                        Good crypto trading\r\n                    </Typography>\r\n                    <Button \r\n                        sx={{color: \"black\", backgroundColor: \"white\", marginRight: \"1rem\"}} \r\n                        onClick={() => handleResetClick()}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                    <Link className='nav-link' to=\"/\">Buy&Sell</Link>\r\n                    <Link className='nav-link' to=\"/portfolio\">Portfolio</Link>\r\n                    <Link className='nav-link' to=\"/about\">About</Link>\r\n                    <Avatar color=\"inherit\">PH</Avatar>\r\n                    {isLoading ? (\r\n                            <p>Loading...</p>\r\n                        ) : (\r\n                            data && !isError ? Object.entries(data).map(([key, value]: [any, any]) => <p key={key}>{value}</p>) : <p>NaN</p>\r\n                        )\r\n                    }\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}