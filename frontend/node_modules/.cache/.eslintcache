[{"C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\index.tsx":"1","C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\App.tsx":"3","C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\Pages\\Portfolio.tsx":"4","C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\Pages\\Home.tsx":"5","C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\Pages\\About.tsx":"6","C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\Components\\Navbar.tsx":"7","C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\Components\\cryptoComponent.tsx":"8","C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\API\\postRequests.ts":"9","C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\API\\getRequests.ts":"10"},{"size":866,"mtime":1685910361783,"results":"11","hashOfConfig":"12"},{"size":440,"mtime":1685808042774,"results":"13","hashOfConfig":"12"},{"size":573,"mtime":1685897738848,"results":"14","hashOfConfig":"12"},{"size":135,"mtime":1685821436720,"results":"15","hashOfConfig":"12"},{"size":460,"mtime":1685826784483,"results":"16","hashOfConfig":"12"},{"size":3349,"mtime":1685808042766,"results":"17","hashOfConfig":"12"},{"size":2769,"mtime":1685925519019,"results":"18","hashOfConfig":"12"},{"size":3186,"mtime":1685834672633,"results":"19","hashOfConfig":"12"},{"size":279,"mtime":1685925281116,"results":"20","hashOfConfig":"12"},{"size":173,"mtime":1685912518917,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1jl11k1",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"25"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\index.tsx",[],[],[],"C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\reportWebVitals.ts",[],[],"C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\App.tsx",[],[],"C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\Pages\\Portfolio.tsx",[],[],"C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\Pages\\Home.tsx",["55","56"],[],"import { useEffect} from 'react'\r\nimport { CryptoComponent } from '../Components/cryptoComponent'\r\nimport axios from 'axios'\r\nimport '../Style/home.css'\r\n\r\nconst Home: React.FC = () => {\r\n\r\n    return(\r\n        <div className='home-div'>\r\n            <h1>Cryptos</h1>\r\n            <CryptoComponent showSellButton={true} coin={\"bitcoin\"}/>\r\n            <CryptoComponent showSellButton={true} coin={\"ethereum\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\Pages\\About.tsx",[],[],"C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\Components\\Navbar.tsx",["57"],[],"C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\Components\\cryptoComponent.tsx",["58"],[],"import { useEffect, useState } from \"react\"\r\nimport Button from '@mui/material/Button'\r\nimport Modal from '@mui/material/Modal';\r\nimport { TextField } from \"@mui/material\";\r\nimport '../Style/crypto.css'\r\n\r\ntype Props = {\r\n    showSellButton: Boolean,\r\n    coin: String\r\n}\r\n\r\nexport const CryptoComponent: React.FC<Props> = (props: Props) => {\r\n\r\n    const [BTC, setBTC] = useState<String>()\r\n    const [action, setAction] = useState<String>();\r\n    const [open, setOpen] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        const pricesWs = new WebSocket(`wss://ws.coincap.io/prices?assets=${props.coin}`)\r\n\r\n        pricesWs.onmessage = msg => {\r\n            const value = JSON.parse(msg.data)\r\n            setBTC(Object.values(value).toString())\r\n        }\r\n\r\n        return () => {\r\n            pricesWs.close();\r\n        }\r\n    })\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleOpen = (action: String) => {\r\n        setOpen(true);\r\n        setAction(action)\r\n    }\r\n\r\n    const buyCoin = () => {\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"crypto-container\">\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <div className=\"confirm-sell-or-purchase-div\">\r\n                    <p>{action}</p>\r\n                    <TextField className=\"textfield\" id=\"standard-basic\" label=\"Amount\" variant=\"standard\" />\r\n                    <section className=\"sell-or-purchase-buttons\">\r\n                        <Button sx={{backgroundColor: \"gray\", color: \"white\", fontSize: \"0.7rem\"}} onClick={handleClose}>Cancel</Button>\r\n                        {\r\n                            action === \"Buy\" ?\r\n                            <Button\r\n                                className=\"buy-or-sell-btn\"\r\n                                sx={{ backgroundColor: \"green\", color: \"white\", fontSize: \"0.7rem\"}}\r\n                            >\r\n                                Buy\r\n                            </Button> :\r\n                            <Button\r\n                                className=\"buy-or-sell-btn\"\r\n                                sx={{ backgroundColor: \"red\", color: \"white\", fontSize: \"0.7rem\"}}\r\n                            >\r\n                                Sell\r\n                            </Button>\r\n                        }\r\n                    </section>\r\n                </div>\r\n            </Modal>\r\n            <p className=\"crypto-name\">{props.coin}</p>\r\n            <section className=\"crypto-in-USD-div\">\r\n                <p className=\"crypto-in-USD\">{BTC} USD</p>\r\n            </section>\r\n            <section className=\"crypto-buttons-div\">\r\n                {\r\n                    props.showSellButton ? <Button onClick={() => handleOpen(\"Sell\")} sx={{ backgroundColor: \"red\", color: \"white\", height: \"80%\"}}>Sell</Button> : null\r\n                }\r\n                <Button onClick={() => handleOpen(\"Buy\")} sx={{ backgroundColor: \"green\", color: \"white\", height: \"80%\"}}>Buy</Button>\r\n            </section>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\API\\postRequests.ts",[],[],"C:\\Users\\Phili\\Programmering\\trading-site\\frontend\\src\\API\\getRequests.ts",[],[],{"ruleId":"59","severity":1,"message":"60","line":1,"column":10,"nodeType":"61","messageId":"62","endLine":1,"endColumn":19},{"ruleId":"59","severity":1,"message":"63","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":13},{"ruleId":"59","severity":1,"message":"64","line":25,"column":11,"nodeType":"61","messageId":"62","endLine":25,"endColumn":22},{"ruleId":"59","severity":1,"message":"65","line":40,"column":11,"nodeType":"61","messageId":"62","endLine":40,"endColumn":18},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'queryClient' is assigned a value but never used.","'buyCoin' is assigned a value but never used."]