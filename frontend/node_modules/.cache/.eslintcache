[{"C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\index.tsx":"1","C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\App.tsx":"3","C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\Pages\\About.tsx":"4","C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\Pages\\Portfolio.tsx":"5","C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\Pages\\Home.tsx":"6","C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\Components\\Navbar.tsx":"7","C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\Components\\cryptoComponent.tsx":"8","C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\API\\postRequests.ts":"9","C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\API\\getRequests.ts":"10","C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\Components\\Tables\\tradeTables.tsx":"11"},{"size":866,"mtime":1685964392730,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1685549435827,"results":"14","hashOfConfig":"13"},{"size":573,"mtime":1685964392725,"results":"15","hashOfConfig":"13"},{"size":3349,"mtime":1685724749191,"results":"16","hashOfConfig":"13"},{"size":1010,"mtime":1686003336252,"results":"17","hashOfConfig":"13"},{"size":460,"mtime":1685964392727,"results":"18","hashOfConfig":"13"},{"size":2762,"mtime":1685983980393,"results":"19","hashOfConfig":"13"},{"size":4541,"mtime":1686003985748,"results":"20","hashOfConfig":"13"},{"size":669,"mtime":1685985201404,"results":"21","hashOfConfig":"13"},{"size":365,"mtime":1686001637369,"results":"22","hashOfConfig":"13"},{"size":2094,"mtime":1686003396802,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"evukus",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\index.tsx",[],[],[],"C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\reportWebVitals.ts",[],[],"C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\App.tsx",[],[],"C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\Pages\\About.tsx",[],[],"C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\Pages\\Portfolio.tsx",["60"],[],"C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\Pages\\Home.tsx",["61","62"],[],"import { useEffect} from 'react'\r\nimport { CryptoComponent } from '../Components/cryptoComponent'\r\nimport axios from 'axios'\r\nimport '../Style/home.css'\r\n\r\nconst Home: React.FC = () => {\r\n\r\n    return(\r\n        <div className='home-div'>\r\n            <h1>Cryptos</h1>\r\n            <CryptoComponent showSellButton={true} coin={\"bitcoin\"}/>\r\n            <CryptoComponent showSellButton={true} coin={\"ethereum\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\Components\\Navbar.tsx",["63"],[],"import { Link } from 'react-router-dom';\r\nimport { Avatar } from '@mui/material';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport { resetUser } from '../API/postRequests';\r\nimport { getUserData } from '../API/getRequests';\r\nimport { IdefaultUserValues } from '../API/interfaces';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport '../Style/navbar.css'\r\n\r\nconst userDefaultData: IdefaultUserValues = {\r\n    name: \"admin\",\r\n    portfolio: {\r\n        fiat: 200000,\r\n        btc: 0,\r\n        eth: 0,\r\n    },\r\n    trades: []\r\n}\r\n\r\nconst Navbar: React.FC = () => {\r\n    const queryClient = useQueryClient();                                                                                                                                       \r\n    const {isLoading, isError, data} = useQuery<any>({\r\n        queryKey: [\"fiat\"],\r\n        queryFn: getUserData\r\n    })\r\n    const resetUserData = useMutation(resetUser)  \r\n\r\n    const handleResetClick = async () => {\r\n        try {\r\n            const data = await resetUserData.mutateAsync(userDefaultData);\r\n            console.log(data)\r\n        } catch {\r\n            console.error(resetUserData.error)\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div className=\"navbar\">\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                    <Typography onClick={() => window.location.href=\"/\"} variant=\"h5\" component=\"div\" sx={{ flexGrow: 1, cursor: \"pointer\" }}>\r\n                        Good crypto trading\r\n                    </Typography>\r\n                    <Button \r\n                        sx={{color: \"black\", backgroundColor: \"white\", marginRight: \"1rem\"}} \r\n                        onClick={() => handleResetClick()}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                    <Link className='nav-link' to=\"/\">Buy</Link>\r\n                    <Link className='nav-link' to=\"/portfolio\">Portfolio</Link>\r\n                    <Link className='nav-link' to=\"/about\">About</Link>\r\n                    <Avatar color=\"inherit\">PH</Avatar>\r\n                    {isLoading ? (\r\n                            <p>Loading...</p>\r\n                        ) : (\r\n                            data && !isError ? Object.entries(data).map(([key, value]: [any, any]) => <p key={key}>{value}</p>) : <p>NaN</p>\r\n                        )\r\n                    }\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\Components\\cryptoComponent.tsx",["64","65"],[],"C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\API\\postRequests.ts",[],[],"C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\API\\getRequests.ts",[],[],"C:\\Users\\Phili\\Programmering\\Trading site\\frontend\\src\\Components\\Tables\\tradeTables.tsx",["66","67"],[],{"ruleId":"68","severity":1,"message":"69","line":8,"column":23,"nodeType":"70","messageId":"71","endLine":8,"endColumn":30},{"ruleId":"68","severity":1,"message":"72","line":1,"column":10,"nodeType":"70","messageId":"71","endLine":1,"endColumn":19},{"ruleId":"68","severity":1,"message":"73","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":13},{"ruleId":"68","severity":1,"message":"74","line":25,"column":11,"nodeType":"70","messageId":"71","endLine":25,"endColumn":22},{"ruleId":"68","severity":1,"message":"75","line":2,"column":23,"nodeType":"70","messageId":"71","endLine":2,"endColumn":31},{"ruleId":"68","severity":1,"message":"76","line":2,"column":33,"nodeType":"70","messageId":"71","endLine":2,"endColumn":47},{"ruleId":"68","severity":1,"message":"77","line":2,"column":20,"nodeType":"70","messageId":"71","endLine":2,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":9,"column":44,"nodeType":"80","endLine":9,"endColumn":46,"suggestions":"81"},"@typescript-eslint/no-unused-vars","'isError' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'queryClient' is assigned a value but never used.","'useQuery' is defined but never used.","'useQueryClient' is defined but never used.","'Column' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'props.data'. Either include it or remove the dependency array.","ArrayExpression",["82"],{"desc":"83","fix":"84"},"Update the dependencies array to be: [props.data]",{"range":"85","text":"86"},[225,227],"[props.data]"]